?seq
?rbeta
SD = c(1:nDraws)
nDraws = 10000
# a)
SD = c(1:nDraws)
source("~/tdde07/lab1/l1_script.R", echo=TRUE)
source("~/tdde07/lab1/l1_script.R", echo=TRUE)
source("~/tdde07/lab1/l1_script.R", echo=TRUE)
source("~/tdde07/lab1/l1_script.R", echo=TRUE)
plot(SD)
plot(E)
22/70
E[10000]
source("~/tdde07/lab1/l1_script.R", echo=TRUE)
plot(result)
alpha/(aplha+b)
lhs/(lhs+rhs)
source("~/tdde07/lab1/l1_script.R", echo=TRUE)
source("~/tdde07/lab1/l1_script.R", echo=TRUE)
source("~/tdde07/lab1/l1_script.R", echo=TRUE)
plot(SD)
# The true values E = alpha / (alpha + beta)
# where our posterior gives alpha = lhs and beta = rhs
lhs / (lhs+ rhs)
plot(E)
(lhs *rhs) / (((lhs + rhs)^2) *(lhs + rhs + 1))
SD^2
SD[nDraws]^2
(lhs *rhs) / (((lhs + rhs)^2) *(lhs + rhs + 1))
plot(SD)
plot(SD^2)
plot(SD)
Variance = (lhs *rhs) / (((lhs + rhs)^2) *(lhs + rhs + 1))
SD_Calc = sqrt(Variance)
plot(SD)
SD_Calc
SD[nDraws]
source("~/tdde07/lab1/l1_script.R", echo=TRUE)
warnings()
##########################################################
#B
?pbeta
##########################################################
#B
temp = pbeta(nDrawa, lhs, rhs)
##########################################################
#B
temp = pbeta(nDraws, lhs, rhs)
temp
temp = pbeta(quantiles, lhs, rhs)
temp
##########################################################
#B
quantiles = c(0.3, 0.7)
temp = pbeta(quantiles, lhs, rhs)
temp
temp = pbeta(seq(1, nDraws, 1), lhs, rhs)
temp
source("~/tdde07/lab1/l1_script.R", echo=TRUE)
temp = pbeta(0.3, lhs, rhs)
temp
plot(temp)
##########################################################
#B
drawed_values = rbeta(nDraws,lhs,rhs)
drawed_values
##########################################################
#B
drawed_values = rbeta(nDraws,lhs,rhs)
over = 0
under = 0
for (i in lengths(drawed_values)){
if (drawed_values[i] > 0.3){
over = over +1
}
else
{
under = under + 1
}
}
over
under
lengths(drawed_values)
for (i in nDraws){
if (drawed_values[i] > 0.3){
over = over +1
}
else
{
under = under + 1
}
}
over
under
for (i in nDraws){
browse()
i
if (drawed_values[i] > 0.3){
over = over +1
}
else
{
under = under + 1
}
}
source("~/tdde07/lab1/l1_script.R", echo=TRUE)
source("~/tdde07/lab1/l1_script.R", echo=TRUE)
length(drawed_values)
over + under
prob_over = over / length(drawed_values)
prob_under = under / length(drawed_values)
prob_over
prob_under
temp = pbeta(0.3, lhs, rhs)
temp
temp = pbeta(0.3, lhs, rhs)
temp
source("~/tdde07/lab1/l1_script.R", echo=TRUE)
temp = pbeta(0.3, lhs, rhs)
temp
drawed_values
prob_over = over / length(drawed_values)
prob_under = under / length(drawed_values)
prob_over
prob_under
temp = pbeta(0.3, lhs, rhs)
temp
source("~/tdde07/lab1/l1_script.R", echo=TRUE)
drawed_values = rbeta(nDraws,lhs,rhs)
drawed_values
over = 0
under = 0
for (value in drawed_values){
if (value > 0.3){
over = over +1
}
else
{
under = under + 1
}
}
prob_over = over / length(drawed_values)
prob_under = under / length(drawed_values)
prob_over
prob_under
temp = pbeta(0.3, lhs, rhs)
temp
drawed_values = rbeta(nDraws,lhs,rhs)
drawed_values
over = 0
under = 0
for (value in drawed_values){
if (value > 0.3){
over = over +1
}
else
{
under = under + 1
}
}
prob_over = over / length(drawed_values)
prob_under = under / length(drawed_values)
prob_over
prob_under
temp = pbeta(0.3, lhs, rhs)
temp
drawed_values = rbeta(nDraws,lhs,rhs)
drawed_values
over = 0
under = 0
for (value in drawed_values){
if (value > 0.3){
over = over +1
}
else
{
under = under + 1
}
}
prob_over = over / length(drawed_values)
prob_under = under / length(drawed_values)
prob_over
prob_under
temp = pbeta(0.3, lhs, rhs)
temp
drawed_values = rbeta(nDraws,lhs,rhs)
drawed_values
over = 0
under = 0
for (value in drawed_values){
if (value > 0.3){
over = over +1
}
else
{
under = under + 1
}
}
prob_over = over / length(drawed_values)
prob_under = under / length(drawed_values)
prob_over
prob_under
temp = pbeta(0.3, lhs, rhs)
temp
drawed_values = rbeta(nDraws,lhs,rhs)
drawed_values
over = 0
under = 0
for (value in drawed_values){
if (value > 0.3){
over = over +1
}
else
{
under = under + 1
}
}
prob_over = over / length(drawed_values)
prob_under = under / length(drawed_values)
prob_over
prob_under
temp = pbeta(0.3, lhs, rhs)
temp
drawed_values = rbeta(nDraws,lhs,rhs)
drawed_values
over = 0
under = 0
for (value in drawed_values){
if (value > 0.3){
over = over +1
}
else
{
under = under + 1
}
}
prob_over = over / length(drawed_values)
prob_under = under / length(drawed_values)
prob_over
prob_under
temp = pbeta(0.3, lhs, rhs)
temp
drawed_values = rbeta(nDraws,lhs,rhs)
drawed_values
over = 0
under = 0
for (value in drawed_values){
if (value > 0.3){
over = over +1
}
else
{
under = under + 1
}
}
prob_over = over / length(drawed_values)
prob_under = under / length(drawed_values)
prob_over
prob_under
temp = pbeta(0.3, lhs, rhs)
temp
drawed_values = rbeta(nDraws,lhs,rhs)
drawed_values
over = 0
under = 0
for (value in drawed_values){
if (value > 0.3){
over = over +1
}
else
{
under = under + 1
}
}
prob_over = over / length(drawed_values)
prob_under = under / length(drawed_values)
prob_over
prob_under
temp = pbeta(0.3, lhs, rhs)
temp
nDraws = 10000000
drawed_values = rbeta(nDraws,lhs,rhs)
drawed_values
over = 0
under = 0
for (value in drawed_values){
if (value > 0.3){
over = over +1
}
else
{
under = under + 1
}
}
prob_over = over / length(drawed_values)
prob_under = under / length(drawed_values)
prob_over
prob_under
temp = pbeta(0.3, lhs, rhs)
temp
nDraws = 10000
drawed_values = rbeta(nDraws,lhs,rhs)
drawed_values
over = 0
under = 0
for (value in drawed_values){
if (value > 0.3){
over = over +1
}
else
{
under = under + 1
}
}
prob_over = over / length(drawed_values)
prob_under = under / length(drawed_values)
prob_over
prob_under
temp = pbeta(0.3, lhs, rhs)
temp
##########################################################
#C
odds = drawed_values / (1-drawed_values)
hist(odds)
denisty(odds)
density(odds)
1-drawed_values
odds
plot(odds)
plot(density(odds))
hist(odds)
plot(density(odds))
############################################################
##                  TASK 2                                ##
############################################################
n = 8
c = (33, 24, 48, 32, 55, 74, 23, 17)
monthly_income = c(33, 24, 48, 32, 55, 74, 23, 17)
mean = 3.6
log(mean)
log(mean(monthly_income))
?qchisq
for (n in seq(1, nDraws, 1)){
result[n] = rbeta(n, lhs, rhs)
SD[n] = sd(result)
E[n] = mean(result)
}
plot(E)
source("~/tdde07/lab1/l1_script.R", echo=TRUE)
source("~/tdde07/lab1/l1_script.R", echo=TRUE)
