source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
install.packages("DescTools")
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
install.packages("bayestestR")
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
View(interval)
View(interval)
interval
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
?abline
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
interval
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
interval[1]
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
install.packages("coda")
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
?sort
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
kernel_density_estimate
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
test = hdi(sorted_G, ci = 0.95)
View(test)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
upper = n * tao_sq
posterior_deviation = upper / draws
prior_sigma_squared = upper / draws
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
draws
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
install.packages("asbio")
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
plot(density(prior_sigma_squared))
number_of_draws = 10000000
# https://en.wikipedia.org/wiki/Inverse-chi-squared_distribution
# From wikipedia, inverse-chisq is related to chisq so we can sample
# from the chisq distribution
# X ~ inv X2(n, t2) -> X ~ inv X2(n) -> Y ~ X2(n) where Y = 1/X
library("asbio")
# draws = rchisq(number_of_draws,length(monthly_income))
draws = rinvchisq(number_of_draws,length(monthly_income)-1)
tao_sq = sum((log(monthly_income)-mean)^2) / length(monthly_income)
upper = n * tao_sq
prior_sigma_squared = upper / draws
plot(density(prior_sigma_squared))
# draws = rchisq(number_of_draws,length(monthly_income))
draws = rinvchisq(number_of_draws,length(monthly_income)-1)
tao_sq = sum((log(monthly_income)-mean)^2) / length(monthly_income)
upper = n * tao_sq
prior_sigma_squared = upper / draws
plot(density(prior_sigma_squared))
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
cdf = ecdf(x)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
plot(density(prior_sigma_squared),x=[1:10])
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
plot(density(prior_sigma_squared),xlim=c(1:10)
plot(density(prior_sigma_squared),xlim=c(1:10))
plot(density(prior_sigma_squared), xlim=c(1,10))
plot(density(prior_sigma_squared), xlim=c(-1,10))
plot(density(prior_sigma_squared), xlim=c(-1,8))
plot(density(prior_sigma_squared), xlim=c(-1,2))
plot(density(prior_sigma_squared), xlim=c(-0,2))
plot(density(prior_sigma_squared), xlim=c(0,3))
# B
# "https://en.wikipedia.org/wiki/Log-normal_distribution"
s2 = prior_sigma_squared
x = sqrt(s2)/sqrt(2)
cdf = pnorm(sqrt(s2)/sqrt(2))
# cdf = ecdf(x)
G = 2 * cdf - 1
plot(density(G))
plot(density(G),xlim=c(0,.8))
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
source("~/repos/tdde07/lab1/lab_1_upg_2.R", echo=TRUE)
number_of_draws = 10000
# https://en.wikipedia.org/wiki/Inverse-chi-squared_distribution
# From wikipedia, inverse-chisq is related to chisq so we can sample
# from the rchisq distribution and get the 1/X
draws = rchisq(number_of_draws,n)
############################################################
##                  TASK 2                                ##
############################################################
# A
monthly_income = c(33, 24, 48, 32, 55, 74, 23, 17)
n = length(monthly_income)
df = n - 1 # Lecture 6)
mean = 3.6
number_of_draws = 10000
# https://en.wikipedia.org/wiki/Inverse-chi-squared_distribution
# From wikipedia, inverse-chisq is related to chisq so we can sample
# from the rchisq distribution and get the 1/X
draws = rchisq(number_of_draws,n)
tao_sq = sum((log(monthly_income)-mean)^2) / n
upper = n * tao_sq
prior_sigma_squared = upper / draws
plot(density(prior_sigma_squared), xlim=c(0,3))
# B
# "https://en.wikipedia.org/wiki/Log-normal_distribution"
s2 = prior_sigma_squared
x = sqrt(s2)/sqrt(2)
cdf = pnorm(sqrt(s2)/sqrt(2))
# cdf = ecdf(x)
G = 2 * cdf - 1
plot(density(G),xlim=c(0,.8))
# C
library("bayestestR")
interval = eti(G,0.95)
plot(density(G), col = "blue",xlim=c(0,.8))
abline(v= interval[2], col = "red")
abline(v= interval[3], col = "red")
# D
sorted_G = sort(G)
test = hdi(sorted_G, ci = 0.95)
plot(density(sorted_G), col = "blue",xlim=c(0,.8))
abline(v= test[2], col = "green")
abline(v= test[3], col = "green")
# Comparison
plot(density(sorted_G), col = "blue",xlim=c(0,.8))
abline(v= interval[2], col = "red")
abline(v= interval[3], col = "red")
abline(v= test[2], col = "green")
abline(v= test[3], col = "green")
############################################################
##                  TASK 2                                ##
############################################################
# A
monthly_income = c(33, 24, 48, 32, 55, 74, 23, 17)
n = length(monthly_income)
df = n - 1 # From lecture 6
mean = 3.6
number_of_draws = 10000
# https://en.wikipedia.org/wiki/Inverse-chi-squared_distribution
# From wikipedia, inverse-chisq is related distribution
draws = rchisq(number_of_draws,n)
tao_sq = sum((log(monthly_income)-mean)^2) / n
upper = n * tao_sq
prior_sigma_squared = upper / draws
plot(density(prior_sigma_squared), xlim=c(0,3))
# B
# "https://en.wikipedia.org/wiki/Log-normal_distribution"
s2 = prior_sigma_squared
x = sqrt(s2)/sqrt(2)
cdf = pnorm(sqrt(s2)/sqrt(2))
G = 2 * cdf - 1
plot(density(G),xlim=c(0,.8))
# C
library("bayestestR")
interval = eti(G,0.95)
plot(density(G), col = "blue",xlim=c(0,.8))
abline(v= interval[2], col = "red")
abline(v= interval[3], col = "red")
plot(G, col = "blue",xlim=c(0,.8))
interval = eti(G,0.95)
plot(densityG), col = "blue",xlim=c(0,.8))
abline(v= interval[2], col = "red")
abline(v= interval[3], col = "red")
# D
sorted_G = sort(G)
test = hdi(sorted_G, ci = 0.95)
plot(density(sorted_G), col = "blue",xlim=c(0,.8))
abline(v= test[2], col = "green")
abline(v= test[3], col = "green")
# Comparison
plot(density(sorted_G), col = "blue",xlim=c(0,.8))
abline(v= interval[2], col = "red")
abline(v= interval[3], col = "red")
abline(v= test[2], col = "green")
abline(v= test[3], col = "green")
source("~/repos/tdde07/lab2/lab2_assignment2.R", echo=TRUE)
setwd("~/repos/tdde07/lab2")
source("~/repos/tdde07/lab2/lab2_assignment2.R", echo=TRUE)
source("~/repos/tdde07/lab2/lab2_assignment2.R", echo=TRUE)
